{
	"id": "b75cf64534f623fb5dbfd701a2c71719",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"./Interfaces/Itreasury.sol\";\n\ncontract Treasury is Itreasury {\n        \n        //enum to save the cuurent \n        enum Condition {\n            INPROGRESS,\n            ACCEPTED,\n            REJECTED\n        }\n\n        //signers\n        // struct Signer {\n        //     address signer1;\n        //     address signer2;\n        //     address signer3 = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n        // }\n        \n        //struct holds the \n        struct Caster {\n            address ad;\n            uint amount;\n            bytes purpose;\n        }\n\n        //appeal\n        struct Appeal{\n            Caster caster;\n            Condition condition;\n\n        }\n        \n        //number of appeals\n        uint number_of_Appeals=0;\n\n        //mapping to save the appeals\n\n    //modifier to check the transaction        \n    // Function to receive Awax. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n\n        function getstatus(address applier) external view override{\n\n        }\n\n}"
			},
			"Interfaces/Itreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ninterface Itreasury {\n\n    function getstatus(address applier) external view;\n    \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Interfaces/Itreasury.sol": {
				"Itreasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "applier",
									"type": "address"
								}
							],
							"name": "getstatus",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getstatus(address)": "3a3d0788"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"applier\",\"type\":\"address\"}],\"name\":\"getstatus\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interfaces/Itreasury.sol\":\"Itreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interfaces/Itreasury.sol\":{\"keccak256\":\"0xed2457d821de90f2ab95e7489b5d9d184b4ceee727153639fa98b493d26f797d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33cc475456e99845cb2aac4bdff3c8ccf279d8a1dc7d89139da8dff61dc3882\",\"dweb:/ipfs/QmWa8XsZrtUtobE6qvefazqL4tXiEaNVN61AmidKbkEBhk\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"treasury.sol": {
				"Treasury": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "applier",
									"type": "address"
								}
							],
							"name": "getstatus",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury.sol\":93:1162  contract Treasury is Itreasury {... */\n  mstore(0x40, 0x80)\n    /* \"treasury.sol\":800:801  0 */\n  0x00\n    /* \"treasury.sol\":777:801  uint number_of_Appeals=0 */\n  dup1\n  sstore\n    /* \"treasury.sol\":93:1162  contract Treasury is Itreasury {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury.sol\":93:1162  contract Treasury is Itreasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a3d0788\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"treasury.sol\":1089:1159  function getstatus(address applier) external view override{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n    tag_12:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_20:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_21\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_15\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:516   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":486:510   */\n      tag_24\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":486:510   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":475:510   */\n      swap1\n      pop\n        /* \"#utility.yul\":465:516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":522:648   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":599:641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":592:597   */\n      dup3\n        /* \"#utility.yul\":588:642   */\n      and\n        /* \"#utility.yul\":577:642   */\n      swap1\n      pop\n        /* \"#utility.yul\":567:648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":654:776   */\n    tag_18:\n        /* \"#utility.yul\":727:751   */\n      tag_28\n        /* \"#utility.yul\":745:750   */\n      dup2\n        /* \"#utility.yul\":727:751   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":720:725   */\n      dup2\n        /* \"#utility.yul\":717:752   */\n      eq\n        /* \"#utility.yul\":707:709   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":766:767   */\n      0x00\n        /* \"#utility.yul\":763:764   */\n      dup1\n        /* \"#utility.yul\":756:768   */\n      revert\n        /* \"#utility.yul\":707:709   */\n    tag_29:\n        /* \"#utility.yul\":697:776   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205eb5efa86efedf259b83b98d717bb96dc36a4e1d70480d02d914bd2c372747b064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805534801561001457600080fd5b50610101806100246000396000f3fe608060405260043610601f5760003560e01c80633a3d0788146027576025565b36602557005b005b348015603257600080fd5b5060496004803603810190604591906061565b604b565b005b50565b600081359050605b8160b7565b92915050565b600060208284031215607257600080fd5b6000607e84828501604e565b91505092915050565b60006090826097565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60be816087565b811460c857600080fd5b5056fea26469706673582212205eb5efa86efedf259b83b98d717bb96dc36a4e1d70480d02d914bd2c372747b064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A3D0788 EQ PUSH1 0x27 JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x49 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x45 SWAP2 SWAP1 PUSH1 0x61 JUMP JUMPDEST PUSH1 0x4B JUMP JUMPDEST STOP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x5B DUP2 PUSH1 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7E DUP5 DUP3 DUP6 ADD PUSH1 0x4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x90 DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBE DUP2 PUSH1 0x87 JUMP JUMPDEST DUP2 EQ PUSH1 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xB5 0xEF 0xA8 PUSH15 0xFEDF259B83B98D717BB96DC36A4E1D PUSH17 0x480D02D914BD2C372747B064736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "93:1069:1:-:0;;;800:1;777:24;;93:1069;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:779:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "465:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "475:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "486:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "475:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "447:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "457:7:2",
														"type": ""
													}
												],
												"src": "420:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "567:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "577:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "592:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "599:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "588:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "577:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "549:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "559:7:2",
														"type": ""
													}
												],
												"src": "522:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "697:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "754:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "763:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "756:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "756:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "720:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "745:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "727:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "727:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "717:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "717:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:43:2"
															},
															"nodeType": "YulIf",
															"src": "707:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "690:5:2",
														"type": ""
													}
												],
												"src": "654:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c80633a3d0788146027576025565b36602557005b005b348015603257600080fd5b5060496004803603810190604591906061565b604b565b005b50565b600081359050605b8160b7565b92915050565b600060208284031215607257600080fd5b6000607e84828501604e565b91505092915050565b60006090826097565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60be816087565b811460c857600080fd5b5056fea26469706673582212205eb5efa86efedf259b83b98d717bb96dc36a4e1d70480d02d914bd2c372747b064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A3D0788 EQ PUSH1 0x27 JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x49 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x45 SWAP2 SWAP1 PUSH1 0x61 JUMP JUMPDEST PUSH1 0x4B JUMP JUMPDEST STOP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x5B DUP2 PUSH1 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7E DUP5 DUP3 DUP6 ADD PUSH1 0x4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x90 DUP3 PUSH1 0x97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBE DUP2 PUSH1 0x87 JUMP JUMPDEST DUP2 EQ PUSH1 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xB5 0xEF 0xA8 PUSH15 0xFEDF259B83B98D717BB96DC36A4E1D PUSH17 0x480D02D914BD2C372747B064736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "93:1069:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1089:70;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:96::-;;486:24;504:5;486:24;:::i;:::-;475:35;;465:51;;;:::o;522:126::-;;599:42;592:5;588:54;577:65;;567:81;;;:::o;654:122::-;727:24;745:5;727:24;:::i;:::-;720:5;717:35;707:2;;766:1;763;756:12;707:2;697:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51400",
								"executionCost": "5111",
								"totalCost": "56511"
							},
							"external": {
								"": "85",
								"getstatus(address)": "433"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 801,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1162,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eb5efa86efedf259b83b98d717bb96dc36a4e1d70480d02d914bd2c372747b064736f6c63430008000033",
									".code": [
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "3A3D0788"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 1162,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1159,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 516,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 420,
											"end": 516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 420,
											"end": 516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 475,
											"end": 510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 475,
											"end": 510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 516,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 522,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 641,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 588,
											"end": 642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 577,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 577,
											"end": 642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 567,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 567,
											"end": 648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 648,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 654,
											"end": 776,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 654,
											"end": 776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 727,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 727,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 727,
											"end": 751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 751,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 727,
											"end": 751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 717,
											"end": 752,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 768,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 707,
											"end": 709,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 697,
											"end": 776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 697,
											"end": 776,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getstatus(address)": "3a3d0788"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"applier\",\"type\":\"address\"}],\"name\":\"getstatus\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury.sol\":\"Treasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interfaces/Itreasury.sol\":{\"keccak256\":\"0xed2457d821de90f2ab95e7489b5d9d184b4ceee727153639fa98b493d26f797d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33cc475456e99845cb2aac4bdff3c8ccf279d8a1dc7d89139da8dff61dc3882\",\"dweb:/ipfs/QmWa8XsZrtUtobE6qvefazqL4tXiEaNVN61AmidKbkEBhk\"]},\"treasury.sol\":{\"keccak256\":\"0x6584ac0cebb4029c033709ecf17bc6e43bf8b31035e68c7c0b558210ec686b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3955e5f029e25d64d8efe7655e0b62d9238a49512cd74b3dc6f73d53f5b5608\",\"dweb:/ipfs/QmZ3TtZbyKuMyQDYPDDXZyaTNtyu5jBMqBLQiocGbZPzUk\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Interfaces/Itreasury.sol": {
				"ast": {
					"absolutePath": "Interfaces/Itreasury.sol",
					"exportedSymbols": {
						"Itreasury": [
							7
						]
					},
					"id": 8,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "Itreasury",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3a3d0788",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getstatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "applier",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:17:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:0"
									},
									"scope": 7,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 8,
							"src": "66:85:0"
						}
					],
					"src": "32:119:0"
				},
				"id": 0
			},
			"treasury.sol": {
				"ast": {
					"absolutePath": "treasury.sol",
					"exportedSymbols": {
						"Itreasury": [
							7
						],
						"Treasury": [
							49
						]
					},
					"id": 50,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 9,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"absolutePath": "Interfaces/Itreasury.sol",
							"file": "./Interfaces/Itreasury.sol",
							"id": 10,
							"nodeType": "ImportDirective",
							"scope": 50,
							"sourceUnit": 8,
							"src": "55:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Itreasury",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 7,
										"src": "114:9:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:1"
								}
							],
							"contractDependencies": [
								7
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49,
								7
							],
							"name": "Treasury",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Treasury.Condition",
									"id": 16,
									"members": [
										{
											"id": 13,
											"name": "INPROGRESS",
											"nodeType": "EnumValue",
											"src": "208:10:1"
										},
										{
											"id": 14,
											"name": "ACCEPTED",
											"nodeType": "EnumValue",
											"src": "232:8:1"
										},
										{
											"id": 15,
											"name": "REJECTED",
											"nodeType": "EnumValue",
											"src": "254:8:1"
										}
									],
									"name": "Condition",
									"nodeType": "EnumDefinition",
									"src": "179:93:1"
								},
								{
									"canonicalName": "Treasury.Caster",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "ad",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "546:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "570:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "570:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "purpose",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "595:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 21,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "595:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Caster",
									"nodeType": "StructDefinition",
									"scope": 49,
									"src": "518:101:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Treasury.Appeal",
									"id": 30,
									"members": [
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "caster",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "673:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Caster_$23_storage_ptr",
												"typeString": "struct Treasury.Caster"
											},
											"typeName": {
												"id": 25,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 24,
													"name": "Caster",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 23,
													"src": "673:6:1"
												},
												"referencedDeclaration": 23,
												"src": "673:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Caster_$23_storage_ptr",
													"typeString": "struct Treasury.Caster"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "condition",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "700:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Condition_$16",
												"typeString": "enum Treasury.Condition"
											},
											"typeName": {
												"id": 28,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 27,
													"name": "Condition",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 16,
													"src": "700:9:1"
												},
												"referencedDeclaration": 16,
												"src": "700:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Condition_$16",
													"typeString": "enum Treasury.Condition"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Appeal",
									"nodeType": "StructDefinition",
									"scope": 49,
									"src": "646:85:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "number_of_Appeals",
									"nodeType": "VariableDeclaration",
									"scope": 49,
									"src": "777:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "777:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "800:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "978:2:1",
										"statements": []
									},
									"id": 37,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:1"
									},
									"scope": 49,
									"src": "951:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1076:2:1",
										"statements": []
									},
									"id": 41,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:2:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:1"
									},
									"scope": 49,
									"src": "1048:30:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										6
									],
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "1147:12:1",
										"statements": []
									},
									"functionSelector": "3a3d0788",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getstatus",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1139:8:1"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "applier",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1108:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:17:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:1"
									},
									"scope": 49,
									"src": "1089:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "93:1069:1"
						}
					],
					"src": "32:1130:1"
				},
				"id": 1
			}
		}
	}
}